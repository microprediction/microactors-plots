# Fit and display Copulas to www.microprediction.org historical data
# 
# 1. Check outs code
# 2. Picks some random streams and horizons
# 3. Estimates a copula
# 4. Submits the samples using a sneaky syndicate pattern
# 5. Creates plots of the copula comparisons to real data
# 6. Checks the plots back into the master branch
# 
# For a more minimalist example see https://github.com/microprediction/microactors/blob/main/.github/workflows/submit.yml instead

name: Submit

on:
  schedule:
    # How often do you want to fit your model? 
    # Public github accounts get 2000 minutes / month 
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/30 * * * *'

defaults:
  run:
    working-directory: ./

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip instal wheel
            pip install --upgrade microprediction
            pip install matplotlib
      - name: Run fit.py using secret WRITE_KEY
        env:
          WRITE_KEY_1: ${{ secrets.WRITE_KEY_1 }}
          WRITE_KEY_2: ${{ secrets.WRITE_KEY_2 }} 
          WRITE_KEY_3: ${{ secrets.WRITE_KEY_3 }}
          WRITE_KEY_4: ${{ secrets.WRITE_KEY_4 }}
        run: |
          python fit.py
      - name: Show git status
        run: | 
          git status
      - name: Add data files  
        run: |
          git config --local user.name  ${{ github.actor }}
          git config --local user.email "my@email.com"
          git add --all           
      - name: Show git status
        run: | 
          git status
      
      - name: Commit
        run: |  
          git commit -a -m "New copula plots"
          
      - name: Show git status
        run: | 
          git status
                    
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
